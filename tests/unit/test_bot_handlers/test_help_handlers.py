"""Unit tests for help command messaging and handler."""

from unittest.mock import AsyncMock, Mock, patch

import pytest
from telegram import Update

from src.bot.messages import get_help_message


class TestHelpMessageContent:
    def test_help_message_includes_all_sections(self):
        message = get_help_message()

        expected_sections = [
            "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –±–æ—Ç–∞",
            "üìå –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã",
            "/start ‚Äî –í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
            "/help ‚Äî –°–ø—Ä–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞",
            "üîç –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
            "/search_room ‚Äî –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É –∫–æ–º–Ω–∞—Ç—ã",
            "/search_floor ‚Äî –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ —ç—Ç–∞–∂—É",
            "–ú–µ–Ω—é –ø–æ–∏—Å–∫–∞ ‚Äî –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
            "/export ‚Äî –≠–∫—Å–ø–æ—Ä—Ç —Å–ø–∏—Å–∫–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö",
            "/export_direct ‚Äî –ü—Ä—è–º–æ–π —ç–∫—Å–ø–æ—Ä—Ç (—É—Å—Ç–∞—Ä–µ–≤—à–∞—è –∫–æ–º–∞–Ω–¥–∞)",
            "üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
            "/schedule ‚Äî –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π",
            "üõ† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "/logging ‚Äî –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–∞–¥–º–∏–Ω)",
            "/auth_refresh ‚Äî –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–∞–¥–º–∏–Ω)",
            "üè† –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç",
        ]

        for section in expected_sections:
            assert section in message, f"Missing section: {section}"

        # Ensure sections appear in the defined order for readability
        indices = [message.index(section) for section in expected_sections]
        assert indices == sorted(indices), "Sections in help message are out of order"


@pytest.mark.asyncio
@patch("src.bot.handlers.help_handlers.get_help_message", return_value="test help")
async def test_handle_help_command_sends_help_text(mock_get_help_message):
    from src.bot.handlers.help_handlers import handle_help_command

    update = Mock(spec=Update)
    message = AsyncMock()
    update.effective_message = message

    context = Mock()

    await handle_help_command(update, context)

    mock_get_help_message.assert_called_once()
    message.reply_text.assert_awaited_once_with(
        "test help", disable_web_page_preview=True
    )
